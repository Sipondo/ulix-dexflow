// ?value: dict
//     | list
//     | string
//     | SIGNED_NUMBER      -> number
//     | "true"             -> true
//     | "false"            -> false
//     | "null"             -> null

// list : "[" [value ("," value)*] "]"

// dict : "{" [pair ("," pair)*] "}"
// pair : string ":" value

// string : ESCAPED_STRING

// %import common.ESCAPED_STRING
// %import common.SIGNED_NUMBER
// %import common.WS
// %ignore WS

?upl: [(statement | concurrent ) ("\n" (statement | concurrent ))*]
concurrent: "!" statement
statement: comment
    |   control
    |   user ":" command
control: control_func "(" fargs ")" "{" "\n"* upl "\n"* "}" 
user: /[a-zA-Z0-9_]+/
command: fcall
    |   assign
    |   say

fcall: function "(" fargs ")"
function: /[[A-Z][a-z0-9_]*/
control_func: /[[A-Z][a-z0-9_]*/
fargs: [object ("," (object))*]

assign: assign_variable "=" object


object: string
    | bool
    | number
    | variable
    | "null"             -> null

string: ESCAPED_STRING
say: ESCAPED_STRING
number: SIGNED_NUMBER | (number /[\+\-\\\*]/ number) | ("(" number /[\+\-\\\*]/ number ")") | yieldvar
bool: bool "and" bool
    | "(" bool "and" bool ")"
    | bool "or" bool
    | "(" bool "or" bool ")"
    | compare
    | "(" compare ")"
    | "true"             -> true
    | "false"            -> false

compare: number comparator number

logical: "and" | "&&"    -> and
    | "or" | "||"         -> or
comparator: ">="         -> greater_or_equal
    | ">"                -> greater
    | "=="               -> equal
    | "<"                -> smaller
    | "<="               -> smaller_or_equal
assign_variable: /[a-zA-Z0-9_]+/ "." /[a-zA-Z0-9_.]+/
variable: /[a-zA-Z0-9_]+/ "." /[a-zA-Z0-9_.]+/
yieldvar: /[a-zA-Z0-9_]+/ "." /[a-zA-Z0-9_.]+/
comment: /#.*/

%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.WS
%ignore WS
