// ?value: dict
//     | list
//     | string
//     | SIGNED_NUMBER      -> number
//     | "true"             -> true
//     | "false"            -> false
//     | "null"             -> null

// list : "[" [value ("," value)*] "]"

// dict : "{" [pair ("," pair)*] "}"
// pair : string ":" value

// string : ESCAPED_STRING

// %import common.ESCAPED_STRING
// %import common.SIGNED_NUMBER
// %import common.WS
// %ignore WS

?upl: [(statement | concurrent | control) ("\n" (statement | concurrent | control ))*]
concurrent: "!" (statement | control)
statement: comment
    |   "exit" -> exit
    |   "break" -> break
    |   user ":" command
control: "if" "(" fargs ")" "{" "\n"* upl "\n"* "}" ("else" "{" "\n"* upl "\n"* "}")? -> control_if
    |    "while" "(" fargs ")" "{" "\n"* upl "\n"* "}" ("else" "{" "\n"* upl "\n"* "}")? -> control_while
    |    "repeat" "(" fargs ")" "{" "\n"* upl "\n"* "}" ("else" "{" "\n"* upl "\n"* "}")? -> control_repeat
//  |    "for" "(" fargs ")" "{" "\n"* upl "\n"* "}" ("else" "{" "\n"* upl "\n"* "}")? -> for
    |    "group" "{" "\n"* upl "\n"* "}" -> control_group
command: fcall
    |   assign
    |   say

fcall: function "(" fargs ")"
function: /[[A-Z][a-z0-9_]*/
fargs: [object ("," (object))*]

assign: assign_variable "=" object


object: string
    | bool
    | SIGNED_NUMBER      -> number
    | variable
    | index
    | number
    | "null"             -> null

string: ESCAPED_STRING
say: ESCAPED_STRING
number: SIGNED_NUMBER | (number /[\+\-\\\*]/ number) | ("(" number /[\+\-\\\*]/ number ")") | variable | index
bool: bool logical bool
    | "(" bool logical bool ")"
    | compare
    | "(" compare ")"
    | "true"             -> true
    | "false"            -> false

compare: number comparator number

logical: "and" | "&"    -> logic_and
    | "or" | "|"         -> logic_or
comparator: ">="         -> comp_greater_or_equal
    | ">"                -> comp_greater
    | "=="               -> comp_equal
    | "<"                -> comp_smaller
    | "<="               -> comp_smaller_or_equal

index: variable "[" number "]"


assign_variable: /[a-zA-Z0-9_.]+/
variable: /[a-zA-Z0-9_.]+/
comment: /#.*/
user: /[a-zA-Z0-9_]+/

%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.WS
%ignore WS
